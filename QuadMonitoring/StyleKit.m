//
//  StyleKit.m
//  QuadMonitoring
//
//  Created by Stanislav Dymedyuk on 1/25/16.
//  Copyright (c) 2016 idistvi. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKit.h"


@implementation StyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawBatteryWithBatteryLevel: (CGFloat)batteryLevel
{
    //// Color Declarations
    UIColor* lowLevelColor = [UIColor colorWithRed: 0.861 green: 0.13 blue: 0.13 alpha: 1];
    UIColor* medLevelColor = [UIColor colorWithRed: 1 green: 0.987 blue: 0 alpha: 1];
    UIColor* highLevelColor = [UIColor colorWithRed: 0.053 green: 1 blue: 0 alpha: 1];

    //// Variable Declarations
    CGFloat expression = batteryLevel < 0 ? 0.5 : (batteryLevel <= 100 ? 24.5 * batteryLevel / 100.0 : 24.5);
    UIColor* levelColor = batteryLevel < 35 ? lowLevelColor : (batteryLevel >= 35 && batteryLevel < 70 ? medLevelColor : highLevelColor);

    //// level Drawing
    UIBezierPath* levelPath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(0.5, 0.5, expression, 9.5) cornerRadius: 1];
    [levelColor setFill];
    [levelPath fill];


    //// BodyGroup
    {
        //// Body Drawing
        UIBezierPath* bodyPath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(0.25, 0.25, 25, 9.5) cornerRadius: 2];
        [UIColor.blackColor setStroke];
        bodyPath.lineWidth = 0.5;
        [bodyPath stroke];


        //// batteryPlus Drawing
        UIBezierPath* batteryPlusPath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(25.25, 2.25, 2.5, 5) byRoundingCorners: UIRectCornerTopRight | UIRectCornerBottomRight cornerRadii: CGSizeMake(1.25, 1.25)];
        [batteryPlusPath closePath];
        [UIColor.blackColor setFill];
        [batteryPlusPath fill];
        [UIColor.blackColor setStroke];
        batteryPlusPath.lineWidth = 0.5;
        [batteryPlusPath stroke];


        //// separators Drawing
        UIBezierPath* separatorsPath = [UIBezierPath bezierPathWithRect: CGRectMake(9.25, 0, 8, 9.75)];
        [UIColor.blackColor setStroke];
        separatorsPath.lineWidth = 0.5;
        [separatorsPath stroke];
    }
}

+ (void)drawTargetCanvasWithFrame: (CGRect)frame
{


    //// Subframes
    CGRect frame2 = CGRectMake(CGRectGetMinX(frame) + floor((CGRectGetWidth(frame) - 50) * 0.50141 + 0.5), CGRectGetMinY(frame) + floor((CGRectGetHeight(frame) - 50) * 0.49852 + 0.5), 50, 50);


    //// LT_corner Drawing
    UIBezierPath* lT_cornerPath = UIBezierPath.bezierPath;
    [lT_cornerPath moveToPoint: CGPointMake(CGRectGetMinX(frame2) + 0.5, CGRectGetMinY(frame2) + 15.5)];
    [lT_cornerPath addLineToPoint: CGPointMake(CGRectGetMinX(frame2) + 0.5, CGRectGetMinY(frame2) + 0.5)];
    [lT_cornerPath addLineToPoint: CGPointMake(CGRectGetMinX(frame2) + 15.5, CGRectGetMinY(frame2) + 0.5)];
    [UIColor.blackColor setStroke];
    lT_cornerPath.lineWidth = 1;
    [lT_cornerPath stroke];


    //// RT_corenr Drawing
    UIBezierPath* rT_corenrPath = UIBezierPath.bezierPath;
    [rT_corenrPath moveToPoint: CGPointMake(CGRectGetMaxX(frame2) - 15.5, CGRectGetMinY(frame2) + 0.5)];
    [rT_corenrPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame2) - 0.5, CGRectGetMinY(frame2) + 0.5)];
    [rT_corenrPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame2) - 0.5, CGRectGetMinY(frame2) + 15.5)];
    [UIColor.blackColor setStroke];
    rT_corenrPath.lineWidth = 1;
    [rT_corenrPath stroke];


    //// LB_corener Drawing
    UIBezierPath* lB_corenerPath = UIBezierPath.bezierPath;
    [lB_corenerPath moveToPoint: CGPointMake(CGRectGetMinX(frame2) + 0.5, CGRectGetMaxY(frame2) - 15.5)];
    [lB_corenerPath addLineToPoint: CGPointMake(CGRectGetMinX(frame2) + 0.5, CGRectGetMaxY(frame2) - 0.5)];
    [lB_corenerPath addLineToPoint: CGPointMake(CGRectGetMinX(frame2) + 15.5, CGRectGetMaxY(frame2) - 0.5)];
    [UIColor.blackColor setStroke];
    lB_corenerPath.lineWidth = 1;
    [lB_corenerPath stroke];


    //// RB_corner Drawing
    UIBezierPath* rB_cornerPath = UIBezierPath.bezierPath;
    [rB_cornerPath moveToPoint: CGPointMake(CGRectGetMaxX(frame2) - 15.5, CGRectGetMaxY(frame2) - 0.5)];
    [rB_cornerPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame2) - 0.5, CGRectGetMaxY(frame2) - 0.5)];
    [rB_cornerPath addLineToPoint: CGPointMake(CGRectGetMaxX(frame2) - 0.5, CGRectGetMaxY(frame2) - 15.5)];
    [UIColor.blackColor setStroke];
    rB_cornerPath.lineWidth = 1;
    [rB_cornerPath stroke];


    //// centerPoint Drawing
    UIBezierPath* centerPointPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame2) + floor((CGRectGetWidth(frame2) - 1) * 0.51020 + 0.5), CGRectGetMinY(frame2) + floor((CGRectGetHeight(frame2) - 1) * 0.48980 + 0.5), 1, 1)];
    [UIColor.redColor setFill];
    [centerPointPath fill];
    [UIColor.redColor setStroke];
    centerPointPath.lineWidth = 1;
    [centerPointPath stroke];
}

@end
